package com.ict11.test;

import java.util.Random;

public class Ex01 {
	//기본문법 활용하기
	//문제 1) 메소드의 선언부를 기술
	public static void main(String[] args) {
		
	//문제 2) 기본 자료형 8가지
	// boolean, char, byte, short, int, long, float, double
	
	//문제 3) int intVar = 129;
	// 상기의 inVar를 byte byteVar에 대입하기 위한 코드를 작성하시오 (형변환)
		int intVar = 129;
		byte byteVar = (byte) intVar;
	
	//문제 4) a++과 ++a의 차이점을 쓰시오.
	//  a++ : 현재 변수 a가 가지고 있는 값을 사용한 후 나중에 a값이 1증가
	//  ++a : 현재 변수 a가 가지고 있는 값에 1을 증가 한 후 나머지 계산
	
	//문제 5) double s1 = 36.666666 일때 소숫점 첫째 짜리까지만 구하는 코딩
		double s1 = 36.666666;
		double k1 = (int) (s1*10)/10.0;
		System.out.println(k1);
		
		
		
	//언어의 특성 활용하기
	//문제 1) 클래스는 무엇들로 이루어졌는가 (3가지 쓰시오) ?
	//		멤버필드(상수,변수) , 멤버메소드 , 생성자
	
	//문제 2) 클래스를 객체로 생성할 때 초기화를 목적으로 반드시 호출하는 것은?
	//		생성자
	
	//문제 3) 어떤 클래스에서 같은이름의 메소드가 여러개 존쟇사는 것으로 반드시 매개변수는 달라야하는 것을 무엇이라 하는가?
	//		오버로딩(Overloading)(=중복정의)
	
	//문제 4) 상속관계에서 부모클래스의 메소드를 자식 클래스가 가져와 자식클래스 상황에 맞게 변경하는 것을 무엇이라 하는가?
	//		오버라이딩(Overriding)(=재정의)
	
	//문제 5) 추상클래스와 인터페이스에 대해서 쓰시오.
	//		추상클래스 : 추상메소드를 하나 이상 가지고 있는 클래스, 추상메소드란 body가 없는 메소드(=구체화가 되지않은 메소드)
	//      인터페이스 : 상수와추상메소드로 이루어진 클래스
		
		
	//라이브러리 활용	
	//문제 1) Random 클래스를 활용해서 정수 1-10 사이의 난 수를 구하시오
		Random ran = new Random();
		int k = (int)(ran.nextDouble()*10)+1;
		int k2 = ran.nextInt(10)+1;
		
	//문제 2) 제네릭과 컬랙션에 대해서 쓰시오.
	//		제네릭 : 컬랙션이 어떤 객체들로 이루어졋는지 표시하는 객체 타입.
	//		컬랙션 : 객체를 모아서 관리하는 인터페이스를 구현한 것.
	//				 객체를 모아서 관리하는 자료구조를 말한다.
		
	//문제 3) Thread클래스와 Runnable 인터페이스의 차이점을 쓰시오.
	//		Thread => start(),run() 가 다 있다.
	//      Runnable => run 만 있음. start() 가 없으므로 별도의 스레드를 생성해서 run()를 가진 클래스를 타겟으로 잡아야된다.
		
	//문제 4) 스레드 처리시 동기화 처리에 대해서 쓰시오.
	//		멀티스레드에서 공통으로 사용되는 영역(임계영역)에서 현재 실행 중인 스레드가 순식간에
	//	 	다른 스레드에게 제어권을 빼앗기는 문제가 발생한다. 이를 해결하기 위한 방법이 동기화 처리이다.
	//		해당 임계영역에 synchronized 예약어를 사용하면 된다.
		
	//문제 5) 바이트스트림과 문자스트림의 차이에 대해서 쓰시오
	//		바이트스트림 : 모든 처리를 1byte로 한다. 1byte로 이루어진 파일들(영상,소리,사진 등 모든 파일)
	//						최상위 클래스 : InputStream, OutputStream
	//		문자스트림 : 모든 처리를 2byte로 한다. 전 세계 모든 언어로 구성된 문서 파일
	//						최상위 클래스 : Reader, Writer	
		
	}
}
